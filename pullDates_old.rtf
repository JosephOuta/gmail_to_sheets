{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;\red77\green80\blue85;\red255\green255\blue254;\red46\green49\blue51;
\red20\green67\blue174;\red186\green6\blue115;\red24\green25\blue27;\red162\green0\blue16;\red18\green115\blue126;
}
{\*\expandedcolortbl;;\cssrgb\c37255\c38824\c40784;\cssrgb\c100000\c100000\c99608;\cssrgb\c23529\c25098\c26275;
\cssrgb\c9412\c35294\c73725;\cssrgb\c78824\c15294\c52549;\cssrgb\c12549\c12941\c14118;\cssrgb\c70196\c7843\c7059;\cssrgb\c3529\c52157\c56863;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
// This Google Script searchs on your Gmail account, and store the results on a Google Sheet file\cf4 \cb1 \
\
\pard\pardeftab720\sl400\partightenfactor0
\cf5 \cb3 var\cf4  \cf6 AVOID_REPEATED_ADDRESS\cf4  = \cf5 true\cf4 ; \cf2 // gets each email address just once on sheet if set to true\cf4 \cb1 \
\
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \cb3 // Main function, the one that you must select before run\cf4 \cb1 \
\
\pard\pardeftab720\sl400\partightenfactor0
\cf5 \cb3 function\cf4  \cf7 saveDates\cf4 () \{\cb1 \
\
\cb3   \cf2 // Select active spreadsheet\cf4 \cb1 \
\cb3   \cf2 // console.log("Clearing sheet...");\cf4 \cb1 \
\cb3   \cf2 /*\cf4 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \cb3   var ss = SpreadsheetApp.getActiveSpreadsheet();\cf4 \cb1 \
\cf2 \cb3   var sheet = ss.getSheets()[1];\cf4 \cb1 \
\cf2 \cb3   */\cf4 \cb1 \
\
\pard\pardeftab720\sl400\partightenfactor0
\cf4 \cb3   \cf5 var\cf4  \cf7 sheet\cf4  = \cf6 SpreadsheetApp\cf4 .\cf7 openById\cf4 (\cf8 "1lJcR4k8ljdOugj_gB881zte1o0LQmmPOr-7e2fJZz04"\cf4 ).\cf7 getSheetByName\cf4 (\cf8 "recontacting(new)"\cf4 );\cb1 \
\
\cb3   \cf2 // Add Sheet header columns 
\f1 \uc0\u9999 \u65039 
\f0  i.e. adds 'Date' column to right of 'email' column\cf4 \cb1 \
\cb3   \cf7 sheet\cf4 .\cf7 insertColumnAfter\cf4 (\cf9 4\cf4 );\cb1 \
\cb3   \cf5 var\cf4  \cf7 newcol\cf4  = \cf7 sheet\cf4 .\cf7 getRange\cf4 (\cf8 "E1"\cf4 );\cb1 \
\cb3   \cf5 var\cf4  \cf7 lastRow\cf4  = \cf7 sheet\cf4 .\cf7 getLastRow\cf4 ();\cb1 \
\cb3   \cf7 newcol\cf4 .\cf7 setValue\cf4 (\cf8 "Contact_Date"\cf4 );\cb1 \
\cb3   \cf5 var\cf4  \cf6 SEARCH_QUERY\cf4  = \cf7 sheet\cf4 .\cf7 getRange\cf4 (\cf9 2\cf4 , \cf9 4\cf4 , \cf7 lastRow\cf4 -\cf9 1\cf4 ).\cf7 getValues\cf4 (); \cb1 \
\cb3     \cb1 \
\cb3   \cf5 for\cf4  (\cf5 let\cf4  \cf7 i\cf4  = \cf9 0\cf4 ; \cf7 i\cf4  < \cf6 SEARCH_QUERY\cf4 .\cf7 length\cf4 ; \cf7 i\cf4 ++) \{\cb1 \
\cb3     \cf5 var\cf4  \cf7 email\cf4  = \cf6 SEARCH_QUERY\cf4 [\cf7 i\cf4 ]; \cb1 \
\
\cb3     \cf7 console\cf4 .\cf7 log\cf4 (\cf8 `Searching for: "\cf4 $\{\cf7 email\cf4 \}\cf8 "`\cf4 );\cb1 \
\cb3     \cf5 var\cf4  \cf7 start\cf4  = \cf9 0\cf4 ;\cb1 \
\cb3     \cf5 var\cf4  \cf7 max\cf4  = \cf9 500\cf4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf5 var\cf4  \cf7 threads\cf4  = \cf6 GmailApp\cf4 .\cf7 search\cf4 (\cf7 email\cf4 , \cf7 start\cf4 , \cf7 max\cf4 );\cb1 \
\cb3     \cf5 if\cf4  (\cf7 threads\cf4 !=\cf5 null\cf4 )\{\cb1 \
\cb3       \cf7 console\cf4 .\cf7 log\cf4 (\cf8 "Threads found 
\f1 \uc0\u55356 \u57225 
\f0 "\cf4 );\cb1 \
\cb3       \cf7 console\cf4 .\cf7 log\cf4 (\cf8 "Collecting last date contacted..."\cf4 );\cb1 \
\cb3     \} \cf5 else\cf4  \{\cb1 \
\cb3       \cf7 console\cf4 .\cf7 warn\cf4 (\cf8 "No emails found within search criteria 
\f1 \uc0\u55357 \u56866 
\f0 "\cf4 );\cb1 \
\cb3       \cf5 return\cf4 ;\cb1 \
\cb3     \}\cb1 \
\cb3     \cb1 \
\cb3     \cf5 var\cf4  \cf7 totalEmails\cf4  = \cf9 0\cf4 ;\cb1 \
\cb3     \cf5 var\cf4  \cf7 contact_date\cf4  = [];\cb1 \
\cb3     \cf5 var\cf4  \cf7 addresses\cf4  = [];\cb1 \
\
\cb3     \cf5 var\cf4  \cf7 thread\cf4  = \cf7 threads\cf4 [\cf9 0\cf4 ];\cb1 \
\cb3     \cf5 var\cf4  \cf7 data\cf4  = \cf7 thread\cf4 .\cf7 getLastMessageDate\cf4 (); \cf2 //this may be redundant, check\cf4 \cb1 \
\cb3     \cf5 var\cf4  \cf7 msgs\cf4  = \cf7 threads\cf4 [\cf9 0\cf4 ].\cf7 getMessages\cf4 (); \cf2 // formerely var msgs = threads[0].getMessages();\cf4 \cb1 \
\cb3     \cf5 var\cf4  \cf7 msg\cf4  = \cf7 msgs\cf4 [\cf9 0\cf4 ]\cb1 \
\
\cb3     \cf2 // Values to get and store 
\f1 \uc0\u9999 \u65039 
\f0 \cf4 \cb1 \
\cb3     \cf5 var\cf4  \cf7 data\cf4  = \cf7 msg\cf4 .\cf7 getDate\cf4 ();          \cb1 \
\cb3     \cf5 var\cf4  \cf7 to\cf4  = \cf7 msg\cf4 .\cf7 getTo\cf4 ();\cb1 \
\cb3     \cf5 var\cf4  \cf7 last_date_contacted\cf4  = [\cf7 data\cf4 ]; \cf2 // formerely said: var dataLine = [data,from,to];\cf4 \cb1 \
\
\cb3     \cf2 // Add values to array --> may be redundant also, check\cf4 \cb1 \
\cb3     \cf5 if\cf4  (!\cf6 AVOID_REPEATED_ADDRESS\cf4  || (\cf6 AVOID_REPEATED_ADDRESS\cf4  && !\cf7 addresses\cf4 .\cf7 includes\cf4 (\cf7 to\cf4 )))\{\cb1 \
\cb3       \cf7 contact_date\cf4 .\cf7 push\cf4 (\cf7 last_date_contacted\cf4 );\cb1 \
\cb3       \cf7 addresses\cf4 .\cf7 push\cf4 (\cf7 to\cf4 );\cb1 \
\cb3     \}\cb1 \
\cb3       \cb1 \
\cb3         \cf2 // Add Dates to sheet\cf4 \cb1 \
\cb3     \cf5 var\cf4  \cf7 row\cf4  = \cf7 i\cf4  + \cf9 2\cf4 \cb1 \
\cb3     \cf5 var\cf4  \cf7 destination_col\cf4  = \cf7 sheet\cf4 .\cf7 getRange\cf4 (\cf7 row\cf4 , \cf9 5\cf4 );\cb1 \
\cb3     \cf7 destination_col\cf4 .\cf7 setValues\cf4 (\cf7 contact_date\cf4 );\cb1 \
\
\cb3     \}\cb1 \
\cb3     \cb1 \
\cb3     \cf2 //fix this: not doing anything at the moment\cf4 \cb1 \
\cb3     \cf7 totalEmails\cf4  = \cf7 totalEmails\cf4  + \cf6 SEARCH_QUERY\cf4 .\cf7 length\cf4 ;\cb1 \
\cb3     \cf7 console\cf4 .\cf7 info\cf4 (\cf7 totalEmails\cf4  + \cf8 " dates added to sheet 
\f1 \uc0\u55356 \u57225 
\f0 "\cf4 );\cb1 \
\cb3   \cb1 \
\cb3   \cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \cb3 // Original: https://github.com/TiagoGouvea/gmail-to-google-sheets-script/\cf4 \cb1 \
\
}